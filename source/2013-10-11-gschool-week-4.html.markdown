---
title: gSchool - Week 4
date: 2013-10-11 15:03 UTC
tags:
---

Getting through the first month feels like a big milestone, even though it came and went without too much "celebration." In the end, the first four weeks went by so quickly, mostly due to the consistent amount of learning and working on projects, and I can't help but think that the next 5 months will evaporate similarly. As I said last week, looking back at the "fear" of breaking things and discomfort with using a text editor or the terminal, I find that our growth as a group has been tremendous, and we all have come a long way in our developer-ness. 

This past week was a great change of pace. During Focus Week, we self-selected into groups and worked on different tutorials or projects. Although I know I need to strengthen my fundamentals a lot more, I wanted to push myself and joined the "Challenge Group." I am happy with my choice, even though I don't really feel any more rested or like I have had any sort of break (which may just be the point of the week...). I'm understanding more and more about getting classes and instances to talk to each other, and how to separate responsibilities so that each class or object does only its job, and nothing more. With that though, I still need a lot more practice with testing, writing (meaningful) tests, and making sure that I focus on slow-and-steady progress rather than just trying to barrel through and get a result. TDD is a goal for all of us, and although I have written some tests, I need to make this a more natural and reflex approach to programming. 

For the week, it was a great opportunity to have some fun and build a game. We built a very rudimentary version of Tic-Tac-Toe, but it was a great experience to involve Ruby Processing and have it reflect the data contained in other classes. The MVC approach isn't too complicated, but it's sometimes hard to avoid the tendency of having a class do too much. With a quick and functioning version of the smaller game, Q and I ventured to create the Ultimate version, which replaces each of the nine squares with an individual game. Our basic model really helped in the scaling and 'talking' of this new, bigger game, and with some struggles we managed to get a mostly functioning version. The idea mostly came out of our desire to play the larger game, but also our laziness to not have to draw a new board over and over. I look forward to improving the game more and more as I learn more skills, and want to make it something that can reflect what I learned in the program.

Working in a pair in a freeform, self-directed, environment was great. It allowed us to structure our progress, make changes and design our 'product' as we wanted. Having that independence was incredible, along with having the support of the others in the group, and instructor guidance. That said, I want to be comfortable working in a variety of environments and styles, so I wouldn't want the style of this week to be the norm. Big group, small group and individual work is all important for the future.

With this game, one of its biggest limitations is that it is a local only game, and has to be played on whichever computer is running the code. It would be nice to have it embedded on a site or app to allow for playing from any computer, and even against an opponent that isn't sharing the same screen. I can't wait to get into web apps next week, and as we begin to learn these skills take what I've learned on my own machine and make it even better.
